{"version":3,"file":"queryCarouselView.js","mappings":";;;;AAAA;AACA;;AAEAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAEzDD,QAAQ,CAACE,gBAAgB,CAAC,oBAAoB,CAAC,CAACC,OAAO,CAACC,aAAa,IAAI;IAExE;IACA,MAAMC,OAAO,GAAGD,aAAa,CAACE,iBAAiB;;IAE/C;IACA,MAAMC,KAAK,GAAGP,QAAQ,CAACQ,aAAa,CAAC,KAAK,CAAC;IAC3CD,KAAK,CAACE,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;IACnCH,KAAK,CAACI,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;;IAE5C;IACA,MAAMC,cAAc,GAAGZ,QAAQ,CAACQ,aAAa,CAAC,IAAI,CAAC;IACnDI,cAAc,CAACH,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;IAC7CH,KAAK,CAACM,WAAW,CAACD,cAAc,CAAC;;IAEjC;IACAP,OAAO,CAACS,UAAU,CAACX,OAAO,CAACY,YAAY,IAAI;MAC1C,IAAIA,YAAY,CAACC,QAAQ,KAAKC,IAAI,CAACC,YAAY,EAAE;QAChD;MACD;MACA,MAAMC,SAAS,GAAGnB,QAAQ,CAACQ,aAAa,CAAC,IAAI,CAAC;MAC9CW,SAAS,CAACV,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;MACvCS,SAAS,CAACN,WAAW,CAACE,YAAY,CAAC;MACnCH,cAAc,CAACC,WAAW,CAACM,SAAS,CAAC;IACtC,CAAC,CAAC;IAEFd,OAAO,CAACe,WAAW,CAACb,KAAK,CAAC;;IAG1B;IACA,MAAMc,QAAQ,GAAGjB,aAAa,CAACkB,aAAa,CAAC,mBAAmB,CAAC;IACjE,IAAID,QAAQ,EAAE;MACbA,QAAQ,CAACV,YAAY,CAAC,eAAe,EAAE,UAAU,CAAC;MAClD,MAAMY,OAAO,GAAGC,KAAK,CAACC,IAAI,CAACJ,QAAQ,CAACnB,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;MACzEqB,OAAO,CAAC,CAAC,CAAC,EAAEZ,YAAY,CAAC,gBAAgB,EAAE,GAAG,CAAC;MAC/CY,OAAO,CAAC,CAAC,CAAC,EAAEZ,YAAY,CAAC,gBAAgB,EAAE,GAAG,CAAC;IAChD;IAEA,MAAMe,YAAY,GAAG;MACpBC,IAAI,EAAE;IACP,CAAC;IAED,IAAIvB,aAAa,CAACK,SAAS,CAACmB,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MACxDF,YAAY,CAACG,OAAO,GAAG,CAAC;MACxBH,YAAY,CAACI,WAAW,GAAG;QAC1B,GAAGJ,YAAY,CAACI,WAAW;QAC3B,GAAG,EAAE;UACJD,OAAO,EAAE;QACV;MACD,CAAC;IACF;IAEA,IAAIzB,aAAa,CAACK,SAAS,CAACmB,QAAQ,CAAC,eAAe,CAAC,EAAE;MACtDF,YAAY,CAACK,IAAI,GAAG,EAAE;IACvB;IAEA,IAAI3B,aAAa,CAACK,SAAS,CAACmB,QAAQ,CAAC,eAAe,CAAC,EAAE;MACtDF,YAAY,CAACM,QAAQ,GAAG,KAAK;IAC9B;IAEA,IAAIC,KAAK,CAAC7B,aAAa,EAAEsB,YAAY,CAAC,CAACQ,KAAK,CAAC,CAAC;EAC/C,CAAC,CAAC;AAEH,CAAC,CAAC,C","sources":["webpack://query-carousel/./src/query-carousel/view.js"],"sourcesContent":["//TODO: We don't need everything from glide\n//require ('../../libraries/glide/glide.js');\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n\tdocument.querySelectorAll('.is-carousel-query').forEach(glideInstance => {\n\n\t\t// we assume the first child is the content wrapper\n\t\tconst content = glideInstance.firstElementChild;\n\n\t\t//create a track for the slides\n\t\tconst track = document.createElement('div');\n\t\ttrack.classList.add('glide__track');\n\t\ttrack.setAttribute('data-glide-el', 'track');\n\n\t\t//create a container for the slides\n\t\tconst slideContainer = document.createElement('ul');\n\t\tslideContainer.classList.add('glide__slides');\n\t\ttrack.appendChild(slideContainer);\n\n\t\t//loop through the children of content and add them to the slideContainer\n\t\tcontent.childNodes.forEach(slideContent => {\n\t\t\tif (slideContent.nodeType !== Node.ELEMENT_NODE) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst slideItem = document.createElement('li');\n\t\t\tslideItem.classList.add('glide__slide');\n\t\t\tslideItem.appendChild(slideContent);\n\t\t\tslideContainer.appendChild(slideItem);\n\t\t});\n\n\t\tcontent.replaceWith(track);\n\n\n\t\t// if there is a wp-block-buttons we'll use that as the controls\n\t\tconst controls = glideInstance.querySelector('.wp-block-buttons');\n\t\tif (controls) {\n\t\t\tcontrols.setAttribute('data-glide-el', 'controls');\n\t\t\tconst buttons = Array.from(controls.querySelectorAll('.wp-block-button'));\n\t\t\tbuttons[0]?.setAttribute('data-glide-dir', '<');\n\t\t\tbuttons[1]?.setAttribute('data-glide-dir', '>');\n\t\t}\n\n\t\tconst glideOptions = {\n\t\t\ttype: 'carousel',\n\t\t};\n\n\t\tif (glideInstance.classList.contains('carousel-two-up')) {\n\t\t\tglideOptions.perView = 2;\n\t\t\tglideOptions.breakpoints = {\n\t\t\t\t...glideOptions.breakpoints,\n\t\t\t\t700: {\n\t\t\t\t\tperView: 1,\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (glideInstance.classList.contains('carousel-peek')) {\n\t\t\tglideOptions.peek = 50;\n\t\t}\n\n\t\tif (glideInstance.classList.contains('carousel-auto')) {\n\t\t\tglideOptions.autoplay = 10000;\n\t\t}\n\n\t\tnew Glide(glideInstance, glideOptions).mount();\n\t});\n\n});\n"],"names":["document","addEventListener","querySelectorAll","forEach","glideInstance","content","firstElementChild","track","createElement","classList","add","setAttribute","slideContainer","appendChild","childNodes","slideContent","nodeType","Node","ELEMENT_NODE","slideItem","replaceWith","controls","querySelector","buttons","Array","from","glideOptions","type","contains","perView","breakpoints","peek","autoplay","Glide","mount"],"sourceRoot":""}